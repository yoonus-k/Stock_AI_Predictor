name: Train and Deploy Models

on:
  schedule:
    # Run every Sunday at midnight
    - cron: '0 0 * * 0'
  workflow_dispatch:
    inputs:
      datasetUpdate:
        description: 'Update dataset on Hugging Face'
        type: boolean
        default: true
      paramTesterTrain:
        description: 'Train parameter tester model'
        type: boolean
        default: true
      rlModelTrain:
        description: 'Train RL model'
        type: boolean
        default: true

jobs:
  update-dataset:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && inputs.datasetUpdate || github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Deployment/requirements.txt
      
      - name: Fetch latest data
        run: |
          python -c "from Data.Utils.mt5_stock_data import fetch_all_stock_data; fetch_all_stock_data()"
        env:
          MT5_LOGIN: ${{ secrets.MT5_LOGIN }}
          MT5_PASSWORD: ${{ secrets.MT5_PASSWORD }}
          MT5_SERVER: ${{ secrets.MT5_SERVER }}
      
      - name: Export and upload dataset
        run: |
          python Deployment/dataset_uploader.py --db_path Data/Storage/data.db --output_dir dataset_export --upload --repo_id ${{ secrets.HF_DATASET_REPO }} --token ${{ secrets.HF_TOKEN }}

  train-parameter-tester:
    runs-on: ubuntu-latest
    needs: update-dataset
    if: always() && (github.event_name == 'workflow_dispatch' && inputs.paramTesterTrain || github.event_name == 'schedule')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Deployment/requirements.txt
      
      - name: Download dataset from Hugging Face
        run: |
          mkdir -p Data/Storage
          python -c "from huggingface_hub import hf_hub_download; hf_hub_download(repo_id='${{ secrets.HF_DATASET_REPO }}', filename='GOLD_1H/prices.json', repo_type='dataset', local_dir='Data/Storage')"
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
      
      - name: Train parameter tester model
        run: |
          python Experements/ParamTesting/parameter_tester.py --stock_id 1 --timeframe_id 3
      
      - name: Upload parameter tester model to Hugging Face
        run: |
          python Deployment/parameter_tester_model.py --upload --repo_id ${{ secrets.HF_PARAM_TESTER_REPO }} --token ${{ secrets.HF_TOKEN }}

  train-rl-model:
    runs-on: ubuntu-latest
    needs: update-dataset
    if: always() && (github.event_name == 'workflow_dispatch' && inputs.rlModelTrain || github.event_name == 'schedule')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Deployment/requirements.txt
      
      - name: Download dataset from Hugging Face
        run: |
          mkdir -p Data/Storage
          python -c "from huggingface_hub import hf_hub_download; hf_hub_download(repo_id='${{ secrets.HF_DATASET_REPO }}', filename='GOLD_1H/prices.json', repo_type='dataset', local_dir='Data/Storage'); hf_hub_download(repo_id='${{ secrets.HF_DATASET_REPO }}', filename='GOLD_1H/sentiment.json', repo_type='dataset', local_dir='Data/Storage')"
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
      
      - name: Train RL model
        run: |
          python RL/Scripts/train.py --timesteps 200000 --save_path models/pattern_sentiment_rl_model
      
      - name: Upload RL model to Hugging Face
        run: |
          python Deployment/trading_rl_model.py --upload --repo_id ${{ secrets.HF_RL_MODEL_REPO }} --token ${{ secrets.HF_TOKEN }}

  deploy-api:
    runs-on: ubuntu-latest
    needs: [train-parameter-tester, train-rl-model]
    if: always() && (github.event_name == 'workflow_dispatch' || github.event_name == 'schedule')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Deployment/requirements.txt
      
      - name: Update API configuration
        run: |
          python -c "import os; import json; config = {'PARAM_TESTER_REPO_ID': '${{ secrets.HF_PARAM_TESTER_REPO }}', 'RL_MODEL_REPO_ID': '${{ secrets.HF_RL_MODEL_REPO }}'}; os.makedirs('Deployment/config', exist_ok=True); json.dump(config, open('Deployment/config/api_config.json', 'w'))"
      
      - name: Login to Hugging Face
        run: |
          pip install huggingface_hub
          python -c "from huggingface_hub import login; login(token='${{ secrets.HF_TOKEN }}')"
      
      - name: Deploy to Hugging Face Spaces
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git clone https://huggingface.co/spaces/${{ secrets.HF_SPACE_REPO }} hf_space
          cp -r Deployment/* hf_space/
          cd hf_space
          git add .
          git commit -m "Update API with latest models [skip ci]"
          git push https://${{ secrets.HF_TOKEN }}@huggingface.co/spaces/${{ secrets.HF_SPACE_REPO }}
